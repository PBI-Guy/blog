/*
====================================================================================================================
DISCLAIMER:		This script has been generated by the PBI Guy. Use it on your own risk.
				Depending on @CounterMax & @Country Variable the script will take more or less time to run.

First step:		Declare needed Type as "Country List"
Second step:	Define needed parameters.
Third step:		Create schema and table
Fourth step:	Do a while loop until wished number of rows is created for each country specified
Fifth step:		Delete Country List Type
====================================================================================================================
*/

DECLARE @TypeName NVARCHAR(50) = 'CountryList'	--If tpye should be deleted please replace value on LAST line as well

IF NOT EXISTS (
	SELECT *

	FROM sys.types

	WHERE name = @TypeName
)
	EXEC('CREATE TYPE ' + @TypeName + ' AS TABLE ([ID] [int] IDENTITY(1,1) NOT NULL, Country NVARCHAR(50), Region NVARCHAR(50))');
GO

DECLARE @Country CountryList;
INSERT INTO @Country 
VALUES ('Switzerland', 'Europe')	--Add more countries if wished by just adding a new one with the same syntax --> ,('Country', 'Region')
	,('Croatia', 'Europe')
	,('Germany', 'Europe')
	,('France', 'Europe')
	,('USA', 'America')
	,('Mexico', 'America')
	,('Brazil', 'America')
	,('China', 'Asia')
	,('Japan', 'Asia')
	,('India', 'Asia')

DECLARE @SchemaName NVARCHAR(50) = 'pbiguy'				--Specify your schema
DECLARE @TableName NVARCHAR(50) = 'custom_partition'	--Specify table name
DECLARE @Counter INT = 1								--Specify start of loop
DECLARE @CounterMax INT = 10							--Specify end of loop / number of rows per country wished
Declare @CountryCounter INT = 1
DECLARE @CurrentCountry NVARCHAR(50)
DECLARE @CurrentRegion NVARCHAR(50)

IF NOT EXISTS (
	SELECT *

	FROM sys.schemas

	WHERE name = @SchemaName
)
	EXEC('CREATE SCHEMA ' + @SchemaName);

IF NOT EXISTS (
	SELECT *

	FROM sys.objects

	WHERE name = @TableName
	)
	EXEC(
		'CREATE TABLE ' + @SchemaName + '.' + @TableName + '(
			[ID] [int] IDENTITY(1,1) NOT NULL,
			[Country] [nvarchar](50) NULL,
			[Region]  [nvarchar](50) NULL,
			[Revenue] [decimal](15, 2) NULL
			)'
	);

WHILE @CountryCounter IS NOT NULL
BEGIN

	SET @CurrentCountry = (SELECT Country FROM @Country WHERE ID = @CountryCounter)
	SET @CurrentRegion = (SELECT Region FROM @Country WHERE ID = @CountryCounter)

	WHILE (@Counter <= @CounterMax)
	BEGIN
		
		EXEC('
		INSERT INTO ' + @SchemaName + '.' + @TableName + '
		VALUES (''' + @CurrentCountry + ''', ''' + @CurrentRegion + ''', ROUND(RAND() * 1000, 2))
		')

		SET @Counter = @Counter + 1
	END

	SET @Counter = 1
	SELECT @CountryCounter = MIN(ID) FROM @Country WHERE ID > @CountryCounter

END

GO

DROP TYPE [CountryList];	--Make sure to use the same name as in line 14 defined